declare module '*/n-multi-hashing.node' {
    function argon2d(buffer: Buffer, t: number, m: number, p: number): Buffer;
    function argon2i(buffer: Buffer, t: number, m: number, p: number): Buffer;
    function argon2id(buffer: Buffer, t: number, m: number, p: number): Buffer;
    function bcrypt(buffer: Buffer, out: Buffer, n: number): Buffer;
    function blake(buffer: Buffer, out: Buffer, n: number): Buffer;
    function boolberry(buffer: Buffer, out: Buffer, n: number): Buffer;
    function c11(buffer: Buffer, out: Buffer, n: number): Buffer;
    function cryptonight(buffer: Buffer, n: number, v: number): Buffer;
    function cryptonightfast(buffer: Buffer, n: number, v: number): Buffer;
    function fresh(buffer: Buffer, out: Buffer, n: number): Buffer;
    function fugue(buffer: Buffer, out: Buffer, n: number): Buffer;
    function groestl(buffer: Buffer): Buffer;
    function groestlmyriad(buffer: Buffer): Buffer;
    function hefty1(buffer: Buffer): Buffer;
    function kawpow(buffer: Buffer, nonce: Buffer, height: number, mix: Buffer, out: Buffer): Buffer;
    function kawpow_verify(buffer: Buffer, nonce: Buffer, height: number, mix: Buffer, out: Buffer): Buffer;
    function keccak(buffer: Buffer, out?: Buffer, n?: number): Buffer;
    function lbry(buffer: Buffer, out?: Buffer, n?: number): Buffer;
    function lyra2re(buffer: Buffer, out?: Buffer, n?: number): Buffer;
    function lyra2rev2(buffer: Buffer, out?: Buffer, n?: number): Buffer;
    function lyra2rev3(buffer: Buffer, out?: Buffer, n?: number): Buffer;
    function lyra2z(buffer: Buffer, out?: Buffer, n?: number): Buffer;
    function lyra2z(buffer: Buffer, out?: Buffer, n?: number): Buffer;
    function neoscrypt(buffer: Buffer, n: number): Buffer;
    function nist5(buffer: Buffer, n: number): Buffer;
    function qubit(buffer: Buffer, n: number): Buffer;
    function scryptjane(buffer: Buffer, t: number, s: number, min: number, max: number): Buffer;
    function scryptn(buffer: Buffer, n: number): Buffer;
    function sha1(buffer: Buffer, out: Buffer, n: number): Buffer;
    function sha256d(buffer: Buffer, out: Buffer, n: number): Buffer;
    function shavite3(buffer: Buffer, out?: Buffer, n?: number): Buffer;
    function skein(buffer: Buffer, out?: Buffer, n?: number): Buffer;
    function x11(buffer: Buffer, out: Buffer, n: number): Buffer;
    function x13(buffer: Buffer, out: Buffer, n: number): Buffer;
    function x15(buffer: Buffer, out: Buffer, n: number): Buffer;
    function x16rv2(buffer: Buffer, out: Buffer, n: number): Buffer;
    function x16r(buffer: Buffer, out?: Buffer, n?: number): Buffer;
    function yescrypt(buffer: Buffer, out?: Buffer, n?: number): Buffer;
}
